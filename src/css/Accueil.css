.Accueil {
  height: 100vh;
}

.Accueil .section-1 {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.Accueil .section-1 h1 {
  margin-left: -195px;
  font-size: 3em;
  margin-bottom: -1.5em;
  -webkit-text-stroke-width: 1px;
  font-style: italic;
}

.Accueil .section-1 h2 {
  display: flex;
  -webkit-text-fill-color: rgba(255, 255, 255, 0);
  /* Will override color (regardless of order) */
  -webkit-text-stroke-width: 1px;
  -webkit-text-stroke-color: black;
  font-style: italic;
  font-size: 3em;
}

.Accueil .section-1 .plus {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 20vh;
}

.Accueil .section-1 .plus svg.MuiSvgIcon-root {
  color: black;
  font-size: 5em;
  animation: animate 2s infinite ease-out;
}

.Accueil .section-1 .plus svg.MuiSvgIcon-root:hover {
  animation-play-state: paused;
  color: gray;
  cursor: pointer;
}

@keyframes animate {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateY(20px);
  }
}

.Accueil .social-container {
  padding: 25px 50px;
  display: flex;
  justify-content: space-between;
}

.Accueil .social-container a.social {
  margin: -25px 30px 0 30px;
  transition: transform 250ms;
  transition: color 250ms;
}

.Accueil .social-container a.social:hover {
  transform: translateY(-2px);
}

.Accueil .social-container a.linkedin {
  color: black;
}

.Accueil .social-container a.linkedin:hover {
  color: #57928c;
}

.Accueil .social-container a.github {
  color: black;
}

.Accueil .social-container a.github:hover {
  color: #6d3838;
}

.Accueil .social-container a.behance {
  color: black;
}

.Accueil .social-container a.behance:hover {
  color: #666d4e;
}

.Accueil .social-container a.sketchfab {
  color: black;
  height: 2em;
  width: 2em;
}

.Accueil .section-2 {
  top: -250px;
}

.Accueil .section-2 .navSecondaire {
  margin-top: 80vh;
  display: flex;
  justify-content: flex-end;
}

.Accueil .section-2 .navSecondaire li {
  list-style: none;
  margin: 0 0 0 25px;
  transition: opacity 500ms;
}

.Accueil .section-2 .navSecondaire li:hover img {
  opacity: 0.7;
  filter: grayscale(0%);
}

.Accueil .section-2 .navSecondaire li:hover .middle {
  opacity: 1;
  transform: translate(15px, -180px);
}

.Accueil .section-2 .navSecondaire li .middle {
  transition: .5s ease;
  opacity: 0;
  transform: translate(0, -150px);
}

.Accueil .section-2 .navSecondaire li .text {
  color: #e6e6e6;
  font-size: 3em;
  font-style: italic;
  text-shadow: 2px 2px #000000;
  text-decoration: none;
  list-style: none;
}

.Accueil .section-2 .navSecondaire li a {
  text-decoration: none;
  list-style: none;
}

.Accueil .section-2 .navSecondaire li a img {
  width: 250px;
  height: 250px;
  object-fit: cover;
  filter: grayscale(60%);
}

.Accueil .player-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 1.5%;
}

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  color: black;
  /* Animation provies a slight random skew. Check bottom of doc
for more information on how to random skew. */
  animation: glitch-skew 1s forwards ease-in-out alternate-reverse;
}

.glitch::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 #bababa;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s forwards ease-in-out alternate-reverse;
}

.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #5e5e5e, 2px 2px #bababa;
  animation: glitch-anim2 5s forwards ease-in-out alternate-reverse;
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(39px, 9999px, 50px, 0);
    transform: skew(0.59deg);
  }
  5% {
    clip: rect(84px, 9999px, 1px, 0);
    transform: skew(0.23deg);
  }
  10% {
    clip: rect(53px, 9999px, 83px, 0);
    transform: skew(0.66deg);
  }
  15% {
    clip: rect(80px, 9999px, 53px, 0);
    transform: skew(0.05deg);
  }
  20% {
    clip: rect(31px, 9999px, 32px, 0);
    transform: skew(0.12deg);
  }
  25% {
    clip: rect(95px, 9999px, 85px, 0);
    transform: skew(0.74deg);
  }
  30% {
    clip: rect(33px, 9999px, 92px, 0);
    transform: skew(0.26deg);
  }
  35% {
    clip: rect(49px, 9999px, 6px, 0);
    transform: skew(0.86deg);
  }
  40% {
    clip: rect(71px, 9999px, 27px, 0);
    transform: skew(0.97deg);
  }
  45% {
    clip: rect(4px, 9999px, 78px, 0);
    transform: skew(0.56deg);
  }
  50% {
    clip: rect(94px, 9999px, 66px, 0);
    transform: skew(0.36deg);
  }
  55% {
    clip: rect(24px, 9999px, 46px, 0);
    transform: skew(0.34deg);
  }
  60% {
    clip: rect(50px, 9999px, 94px, 0);
    transform: skew(0.1deg);
  }
  65% {
    clip: rect(36px, 9999px, 49px, 0);
    transform: skew(0.55deg);
  }
  70% {
    clip: rect(28px, 9999px, 36px, 0);
    transform: skew(0.74deg);
  }
  75% {
    clip: rect(95px, 9999px, 72px, 0);
    transform: skew(0.52deg);
  }
  80% {
    clip: rect(45px, 9999px, 57px, 0);
    transform: skew(0.83deg);
  }
  85% {
    clip: rect(20px, 9999px, 50px, 0);
    transform: skew(0.11deg);
  }
  90% {
    clip: rect(40px, 9999px, 67px, 0);
    transform: skew(1deg);
  }
  95% {
    clip: rect(24px, 9999px, 65px, 0);
    transform: skew(0.19deg);
  }
  100% {
    clip: rect(83px, 9999px, 24px, 0);
    transform: skew(0.84deg);
  }
}

@keyframes glitch-anim2 {
  0% {
    clip: rect(20px, 9999px, 87px, 0);
    transform: skew(0.95deg);
  }
  5% {
    clip: rect(30px, 9999px, 79px, 0);
    transform: skew(0.83deg);
  }
  10% {
    clip: rect(25px, 9999px, 29px, 0);
    transform: skew(0.59deg);
  }
  15% {
    clip: rect(24px, 9999px, 20px, 0);
    transform: skew(0.02deg);
  }
  20% {
    clip: rect(77px, 9999px, 21px, 0);
    transform: skew(0.16deg);
  }
  25% {
    clip: rect(19px, 9999px, 63px, 0);
    transform: skew(0.85deg);
  }
  30% {
    clip: rect(16px, 9999px, 88px, 0);
    transform: skew(0.44deg);
  }
  35% {
    clip: rect(6px, 9999px, 72px, 0);
    transform: skew(1deg);
  }
  40% {
    clip: rect(58px, 9999px, 37px, 0);
    transform: skew(0.45deg);
  }
  45% {
    clip: rect(67px, 9999px, 57px, 0);
    transform: skew(0.55deg);
  }
  50% {
    clip: rect(57px, 9999px, 37px, 0);
    transform: skew(0.27deg);
  }
  55% {
    clip: rect(20px, 9999px, 88px, 0);
    transform: skew(0.67deg);
  }
  60% {
    clip: rect(46px, 9999px, 64px, 0);
    transform: skew(0.87deg);
  }
  65% {
    clip: rect(45px, 9999px, 89px, 0);
    transform: skew(0.6deg);
  }
  70% {
    clip: rect(14px, 9999px, 70px, 0);
    transform: skew(0.63deg);
  }
  75% {
    clip: rect(67px, 9999px, 39px, 0);
    transform: skew(0.89deg);
  }
  80% {
    clip: rect(76px, 9999px, 91px, 0);
    transform: skew(0.45deg);
  }
  85% {
    clip: rect(24px, 9999px, 40px, 0);
    transform: skew(0.86deg);
  }
  90% {
    clip: rect(35px, 9999px, 77px, 0);
    transform: skew(0.78deg);
  }
  95% {
    clip: rect(29px, 9999px, 98px, 0);
    transform: skew(0.48deg);
  }
  100% {
    clip: rect(12px, 9999px, 64px, 0);
    transform: skew(0.67deg);
  }
}

@keyframes glitch-skew {
  0% {
    transform: skew(-4deg);
  }
  10% {
    transform: skew(3deg);
  }
  20% {
    transform: skew(2deg);
  }
  30% {
    transform: skew(1deg);
  }
  40% {
    transform: skew(3deg);
  }
  50% {
    transform: skew(4deg);
  }
  60% {
    transform: skew(-4deg);
  }
  70% {
    transform: skew(-3deg);
  }
  80% {
    transform: skew(4deg);
  }
  90% {
    transform: skew(3deg);
  }
  100% {
    transform: skew(2deg);
  }
}
/*# sourceMappingURL=Accueil.css.map */