.Accueil {
	.section-1 {
		display: flex;
		justify-content: center;
		align-items: center;
		flex-direction: column;

		h1 {
			margin-left: -195px;
			font-size: 3em;
			margin-bottom: -1.5em;
			-webkit-text-stroke-width: 1px;
			font-style: italic;
		}

		h2 {
			display: flex;
			-webkit-text-fill-color: rgba(255, 255, 255, 0);
			-webkit-text-stroke-width: 1px;
			-webkit-text-stroke-color: black;
			font-style: italic;
			font-size: 3em;
		}

		h3 {
			font-size: 3em;
			margin-bottom: -1.5em;
			font-style: italic;
			color: rgb(109, 56, 56);
		}

		.titreMobile {
			display: none;
		}

		.plus {
			display: flex;
			justify-content: center;
			align-items: center;
			margin-top: 20vh;

			svg.MuiSvgIcon-root {
				color: black;
				font-size: 5em;
				animation: animate 2s infinite ease-out;

				&:hover {
					-webkit-animation-play-state: paused;
					animation-play-state: paused;
					color: gray;
					cursor: pointer;
				}
			}

			@keyframes animate {
				0% {
					opacity: 0;
					transform: translateY(-20px);
				}

				50% {
					opacity: 1;
				}

				100% {
					transform: translateY(20px);
				}
			}
		}
	}

	.social-container {
		padding: 25px 50px;
		display: flex;
		justify-content: space-between;

		a.social {
			margin: -25px 30px 0 30px;
			transition: transform 250ms;
			transition: color 250ms;
		}

		a.social:hover {
			transform: translateY(-2px);
		}

		a.linkedin {
			color: black;

			&:hover {
				color: rgb(87, 146, 140);
			}
		}

		a.github {
			color: black;

			&:hover {
				color: rgb(109, 56, 56);
			}
		}

		a.behance {
			color: black;

			&:hover {
				color: rgb(102, 109, 78);
			}
		}

		a.sketchfab {
			color: black;
			height: 2em;
			width: 2em;
		}
	}

	.section-2 {
		top: -250px;

		.navSecondaire {
			margin-top: 30vh;
			display: flex;
			justify-content: flex-end;
			align-items: flex-end;
			flex-direction: row;

			li {
				list-style: none;
				// margin: 0 0 0 25px;
				transition: opacity 500ms;

				&:hover img {
					opacity: 0.7;
					filter: grayscale(0%);
				}

				&:hover .middle {
					opacity: 1;
					transform: translate(15px, -180px);
				}

				.middle {
					transition: .5s ease;
					opacity: 0;
					transform: translate(0, -150px);
				}

				.text {
					color: rgb(230, 230, 230);
					font-size: 3em;
					font-style: italic;
					text-shadow: 2px 2px #000000;
					text-decoration: none;
					list-style: none;
				}

				a {
					text-decoration: none;
					list-style: none;
				}

				a img {
					width: 250px;
					height: 250px;
					object-fit: cover;
					filter: grayscale(80%);
				}
			}
		}
	}

	.player-wrapper {
		display: flex;
		justify-content: center;
		align-items: center;
		margin-top: 1.5%;
	}
}


/* copie du texte
directement sur le texte existant, définissant également le contenu de la manière appropriée
texte défini dans l'attribut data-text. */

@mixin glitchCopy {
	content: attr(data-text);
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

.glitch {
	position: relative;
	color: rgb(0, 0, 0);
	/* L'animation montre un léger biais aléatoire. */
	animation: glitch-skew 1s infinite forwards alternate-reverse;

	// Crée une copie avant notre texte.
	&::before {
		// Duplique notre texte
		@include glitchCopy;
		// Fait glisser le texte légèrement vers la gauche pour le décalage de couleur.
		left: 2px;
		// Crée la couleur «ombre» qui se produit sur le Glitch.
		text-shadow: -2px 0 #bababa;
		/* Crée un clip initial pour notre problème. Cela fonctionne dans
  une mode typique en haut, à droite, en bas, à gauche et crée un masque
  pour ne montrer qu'une certaine partie du Glitch à la fois. */
		clip: rect(44px, 450px, 56px, 0);
		/* Exécute le glitch-anim défini ci-dessous pour s'exécuter dans une boucle de 5s, à l'infini,
  avec une animation en alternance pour garder les choses fraîches. */
		animation: glitch-anim 5s infinite forwards alternate-reverse;
	}

	// Crée une copie après notre texte. Notez les commentaires de :: before.
	&::after {
		@include glitchCopy;
		left: -2px;
		text-shadow: -2px 0 #5e5e5e, 2px 2px #bababa;
		animation: glitch-anim2 5s infinite forwards alternate-reverse;
	}
}

/* Crée une animation avec 20 steaps. Pour chaque étape, il calcule
un pourcentage pour l'étape spécifique. Il génère ensuite un clip aléatoire
boîte à utiliser pour l'effet de Glitch aléatoire. Ajoute également un très subtil
incliner pour changer l '«épaisseur» du Glitch.*/
@keyframes glitch-anim {
	$steps: 20;

	@for $i from 0 through $steps {
		#{percentage($i*(1/$steps))} {
			clip: rect(random(100)+px, 9999px, random(100)+px, 0);
			transform: skew((random(100) / 100) + deg);
		}
	}
}

// Même accord, juste dupliqué pour un rendu ultra aléatoire.
@keyframes glitch-anim2 {
	$steps: 20;

	@for $i from 0 through $steps {
		#{percentage($i*(1/$steps))} {
			clip: rect(random(100)+px, 9999px, random(100)+px, 0);
			transform: skew((random(100) / 100) + deg);
		}
	}
}

//Fait la même chose qu'avant, mais maintenant seulement des biais. Utilisé pour le texte principal.
@keyframes glitch-skew {
	$steps: 10;

	@for $i from 0 through $steps {
		#{percentage($i*(1/$steps))} {
			transform: skew((random(10) - 5) + deg);
		}
	}
}

// ******************************************************************Tablette******************************************************************
@media (min-width: 521px) and (max-width: 1440px) {
	.Accueil {

		.section-1 {
			margin-top: 25%;
		}

		.react-player {
			display: none;
		}

		.section-2 {
			margin-top: 0vh;

			.navSecondaire {
				display: flex;
				justify-content: center;
				align-items: center;
				flex-direction: column;
				margin-left: -5%;

				li {
					&:hover .middle {
						transform: translate(155px, -380px);
					}

					.middle {
						opacity: 1;
						transform: translate(55px, -350px);
					}

					a img {
						width: 550px;
						height: 450px;
					}
				}
			}
		}

		.section-1 {
			.titreMobile {
				display: flex;
				color: black;
			}

		}
	}

}

// ******************************************************************Mobile******************************************************************
@media (max-width: 520px) {
	.Accueil {
		.section-1 {
			margin-top: 25%;

			h1,
			h2 {
				font-size: 2.5em;
			}
		}

		.react-player {
			display: none;
		}

		.section-2 {
			margin-top: 0vh;

			.navSecondaire {
				display: flex;
				justify-content: center;
				align-items: center;
				flex-direction: column;
				margin-left: -5%;

				li {
					&:hover .middle {
						transform: translate(185px, -180px);
					}

					.middle {
						opacity: 1;
						transform: translate(85px, -150px);
					}

					a img {
						width: 550px;
						height: 350px;
					}
				}
			}
		}

		.section-1 {
			.titreMobile {
				display: flex;
				color: black;
			}
		}
	}

}

// ******************************************************************Mobile petit format******************************************************************
@media only screen and (max-width: 361px) {
	.Accueil {

		.section-1 {

			h1,
			h2 {
				font-size: 2em;
			}
		}

		.section-2 {
			margin-top: 0vh;

			.navSecondaire {
				display: flex;
				justify-content: center;
				align-items: center;
				flex-direction: column;

				// margin-left: -5%;
				li {
					&:hover .middle {
						transform: translate(100px, -280px);
					}

					.middle {
						opacity: 1;
						transform: translate(45px, -250px);
					}

					a img {
						width: 380px;
						height: 350px;
					}
				}
			}
		}

	}
}